<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TIL on 静静地坐着</title>
    <link>http://prime167.github.io/categories/til/</link>
    <description>Recent content in TIL on 静静地坐着</description>
    <image>
      <title>静静地坐着</title>
      <url>https://i.loli.net/2021/09/26/3OMGXylm8HUYJ6p.png</url>
      <link>https://i.loli.net/2021/09/26/3OMGXylm8HUYJ6p.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Oct 2021 09:53:28 +0800</lastBuildDate>
    <atom:link href="http://prime167.github.io/categories/til/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows 10 解决端口被占用问题</title>
      <link>http://prime167.github.io/posts/2021-10-28_windows10-port/</link>
      <pubDate>Thu, 28 Oct 2021 09:53:28 +0800</pubDate>
      <guid>http://prime167.github.io/posts/2021-10-28_windows10-port/</guid>
      <description>前几天启动hugo server时提示1313端口被占用，给分配了一个随机端口，打开自己写的程序，mqtt默认的1883端口也被占用，使用
1 netstat -ano | findstr 1883 没有任何返回 一番Google后得知某些端口被Hyper-V保留了。 解决方法：
关闭Hyper-V 1 dism.exe /Online /Disable-Feature:Microsoft-Hyper-V 重启后设置你想保留的端口，这样Hyper-V就不能再占用 1 2 # 排除ipv4动态端口占用 startport 起始端口 numberofports 端口数 netsh int ipv4 add excludedportrange protocol=tcp startport=&amp;lt;your port&amp;gt; numberofports=1 对于1313和1883端口，我执行了两次此命令： 1 2 3 netsh int ipv4 add excludedportrange protocol=tcp startport=1313 numberofports=1 netsh int ipv4 add excludedportrange protocol=tcp startport=1883 numberofports=1 重新启用Hyper-V,需要重启 1 dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All 再次查看端口排除范围（被系统或者我们自己保留的端口）
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 λ netsh int ipv4 show excludedportrange tcp 协议 tcp 端口排除范围 开始端口 结束端口 ---------- -------- 80 80 1313 1313 * 1883 1883 * 1899 1998 1999 2098 2108 2207 2208 2307 2308 2407 2422 2521 2522 2621 2622 2721 2722 2821 2822 2921 5357 5357 45000 45000 50000 50059 * * - 管理的端口排除。 带*就是我上面添加的。</description>
    </item>
    <item>
      <title>git 使用includeIf配置多身份隔离</title>
      <link>http://prime167.github.io/posts/2021-10-27-git-commit-user-per-dir/</link>
      <pubDate>Wed, 27 Oct 2021 09:53:28 +0800</pubDate>
      <guid>http://prime167.github.io/posts/2021-10-27-git-commit-user-per-dir/</guid>
      <description>问题 作为开发者，我们会有很多项目，公司项目，开源项目。对于不同的项目，我会使用不同的身份（user.name和user.email组合）：
公司的项目使用自己的名字和公司的邮箱: 张三 &amp;lt;zhansan@somecorp.com&amp;gt; 开源项目我会使用昵称和私人邮箱: Jack &amp;lt;xxx+xxx@users.noreply.github.com&amp;gt; 在~/.gitconfig（Windows 为%USERPROFILE%.gitconfig）只能声明一组name和email组合作为默认身份。虽然可以在每个repo下简单的通过运行 git config user.email &amp;lt;EMAIL&amp;gt; 和 git config user.name &amp;lt;NAME&amp;gt;命令来更改，问题是对于每个项目我都要运行这两个命令，难免有时候也会忘了设置，导致使用了错误的身份提交。
幸运的是，git为我们提供解决此问题的方法
[includeIf] 从 git 2.13.0 开始，git 配置文件开始支持 Conditional Includes 的配置。通过设置 includeIf..path，可以向命中 condition 的 git 仓库引入 path 指向的一个 git 配置文件中配置。
[includeIf] 的语法如下， 为关键词， 是与关键词关联的数据， 具体意义由关键词决定。
[includeIf &amp;ldquo;:&amp;rdquo;] path = path/to/gitconfig 其中支持的 keyword 有：
gitdir: 其中 是一个 glob pattern 如果代码仓库的.git目录匹配 指定的 glob pattern，那么条件命中； gitdir/i：gitdir的大小写不敏感版本。 onbranch：其中 是匹配分支名的一个glob pattern。 假如代码仓库中分支名匹配 ，那么条件命中。 就我们的需求，使用 gitdir 完全可以。
解决方案 加入我们有以下两个目录</description>
    </item>
  </channel>
</rss>
